var views = 0;
var ideaTimer = null;
var creativity = 1; //creativity level
var rangeIdea = 5; //value of Qt on range
var ideaQl =  1; //value of Ql on range
var ideasQt = 0; //amount of ideas ready to edit
var ideasQtTotal = 0; //amount of ideas since beginning DONT NEED THIS ANYMORE MAYBE
var ideaQlArray = new Array();
var shootEdit = 10; //SHOOT & EDIT : technical thomas variable gtfo
var ShootEditRem = 10; //SHOOT & EDIT : number of remaining clicks
var videosEdited = 0; //SHOOT & EDIT : number of videos edited
var shootEditMemory = 5; //SHOOT & EDIT : Max videos edited 
var videosUploaded = 0; //UPLOAD : Videos online
var averageQlArrayNum = 0; // UPLOAD : the average Ql numerator
var averageQlArray = 0; //UPLOAD : average video quality after upload

//Basic Add function for Views
function addition(number){
  views = views + number //* Math.ceil(Lvl/2);
  document.getElementById("views").innerHTML = views;
}

//Basic Upgrade function according to views
function upgrade(){
  var upCost = Math.floor(10* Math.pow(1.2,creativity));
  if(views >= upCost){
    creativity = creativity + 1;
    views = views - upCost;
    document.getElementById("views").innerHTML = views;
    document.getElementById("creativityLvl").innerHTML = "Lvl : "+creativity;
  }
    nextCost = Math.floor(10 * Math.pow(1.2,creativity));
    document.getElementById('upgradeCost').innerHTML = "Cost : "+nextCost;
}

//Basic Add function for Autoclick
function autoviews(number){
  views = views + number
  document.getElementById("views").innerHTML = views;
}

//start timer ideas
 function startTimerIdeas() {
        ideaTimer = setInterval(function(){
          autoviews(1);
          ideasGen();
        },1000);
    }

//stop timers
 function stopTimers() {
        clearInterval(ideaTimer);
    }

//view range
function ideaRangeMax(rangeValue) {
   rangeIdea = rangeValue; //stores range value quantity
   document.getElementById("idea").innerHTML = rangeValue;
   var maxRangeValue = creativity + 9; //increases slider max value
   document.getElementById("ideaRange").max = maxRangeValue;
   ideaQl = maxRangeValue - rangeValue;
   document.getElementById("ideaQl").innerHTML = ideaQl;
}

//Adds up range value quantities in Ideas generated and calculates Ql array
function ideasGen() {
    rangeIdea = parseInt(rangeIdea);
    
    var arrayAdd = fillArray(ideaQl, rangeIdea);
    ideaQlArray = ideaQlArray.concat(arrayAdd);
    document.getElementById("arrayQl").innerHTML = ideaQlArray;
  
    ideasQt = rangeIdea + ideasQt;
    document.getElementById("ideasGen").innerHTML = ideasQt;
    ideasQtTotal = parseInt(rangeIdea) + ideasQtTotal;
    document.getElementById("ideasGenTotal").innerHTML = ideasQtTotal;
}

//to calculate the right array to separate grouped ideas
function fillArray(value, len) {
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr.push(value);
  }
  return arr;
}

//SHOOT EDIT : ALL & Clicks left for edit
function clicksLeft(){
  if(ShootEditRem > 0){
    ShootEditRem = ShootEditRem - 1 ;
    document.getElementById("editClicks").innerHTML = ShootEditRem;
  }
  else if(ShootEditRem == 0 && ideasQt > 0 && videosEdited < shootEditMemory){
    ShootEditRem = shootEdit;
    document.getElementById("editClicks").innerHTML = ShootEditRem; 
    videosEdited = videosEdited + 1;
    document.getElementById("videosEdited").innerHTML = videosEdited;
    ideasQt = ideasQt - 1;
    document.getElementById("ideasGen").innerHTML = ideasQt;
  }
}

//loading bar
function move() {
  var loadState = 0;
  if (videosEdited > 0 && loadState == 0) {
    loadState = 1;
    var elem = document.getElementById("myBar");
    var width = 1;
    var id = setInterval(frame, 10);
    function frame() {
      if (width >= 100) {
        clearInterval(id);
        loadState = 0;
      videosUploaded++;
      document.getElementById("videos").innerHTML = videosUploaded;
      videosEdited--;
      document.getElementById("videosEdited").innerHTML = videosEdited;
      
      averageQl();
        
      } 
      else {
        width++;
        elem.style.width = width + "%";
      }
    }
  }
}

//calculate average
function averageQl(){
  var nextQl = ideaQlArray[0];
  averageQlArrayNum = averageQlArrayNum + nextQl;
  averageQlArray = averageQlArrayNum/videosUploaded;
  ideaQlArray.shift();
  document.getElementById("averageQl").innerHTML = averageQlArray;
  document.getElementById("arrayQl").innerHTML = ideaQlArray;
}
